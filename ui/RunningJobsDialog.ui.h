/****************************************************************************
** ui.h extension file, included from the uic-generated form implementation.
**
** If you wish to add, delete or rename slots use Qt Designer which will
** update this file, preserving your code. Create an init() slot in place of
** a constructor, and a destroy() slot in place of a destructor.
*****************************************************************************/

void RunningJobsDialog::init()
{
  // hide the horizontal header in the gshTagTable
  runningGSHTagTable->verticalHeader()->hide();
  runningGSHTagTable->setLeftMargin(0);
  runningGSHTagTable->setColumnWidth(0, 250);
  runningGSHTagTable->setColumnWidth(1, 50);
}


void RunningJobsDialog::setConfig(LauncherConfig *aConfig )
{
  mConfig = aConfig;

  // populate the viz's simulation gsh entry box with a good default
  runningGSHLineEdit->setText(mConfig->simulationGSH);
  if (mResultString != NULL)
    *mResultString = runningGSHLineEdit->text();

  // populate the gsh tag list view - spawn a process
  // to do this, read the results in from a slot here
  // when we're ready.
  mGridifier.getSGSies(mConfig->topLevelRegistryGSH, runningGSHTagTable);

}

void RunningJobsDialog::runningGSHSelectedSlot( int row, int col, int button, const QPoint & mousePos )
{
  // Stick the result in the Line edit
  runningGSHLineEdit->setText(runningGSHTagTable->text(row,col));

  // and change the (nasty) result string to show it too
  if (mResultString != NULL)
    *mResultString = runningGSHTagTable->text(row,col);
}

/** MR - 28/01/03
 *
 *  This method is a total hack. Here's why...
 *
 *  QT 3.0.5 (which is the latest rpm release on redhat 7.3)
 *  does not allow the definition of member functions in 'ui'
 *  files generated by QT Designer. You can only make slots.
 *  Slots in turn can't return values, so we can't get the
 *  output of this class from the main RegLauncher form.
 *
 *  The only way to do so is to abuse the existing slots, and
 *  pass in a pointer to a container for the results, and do it
 *  that way. It sucks, but there's no time for me to recompile
 *  a later version of QT from source on my machine and risk
 *  damaging a working installation so close to the deadline.
 *
 *  Not that as of QT 3.1 and greater, QT Designer allows you
 *  to create functions in 'ui' files. Just not my version :(
 */
void RunningJobsDialog::setResultString(QString *aResultString){
  mResultString = aResultString;
  *mResultString = runningGSHLineEdit->text();
}
